input {
  # File input for application logs
  file {
    path => "/var/log/application/*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    tags => ["application"]
  }

  # File input for nginx logs
  file {
    path => "/var/log/nginx/*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    tags => ["nginx"]
  }

  # File input for system logs
  file {
    path => "/var/log/syslog"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    tags => ["system"]
  }

  # TCP input for JSON logs
  tcp {
    port => 5000
    codec => json_lines
    tags => ["json"]
  }

  # HTTP input for webhook logs
  http {
    port => 8080
    codec => json
    tags => ["webhook"]
  }
}

filter {
  # Parse JSON logs
  if "json" in [tags] {
    json {
      source => "message"
      remove_field => ["message"]
    }
  }

  # Parse nginx logs
  if "nginx" in [tags] {
    grok {
      match => { "message" => '%{IPORHOST:remote_ip} - %{DATA:user_name} \[%{HTTPDATE:access_time}\] "%{WORD:http_method} %{DATA:url} HTTP/%{NUMBER:http_version}" %{NUMBER:response_code} %{NUMBER:body_sent_bytes} "%{DATA:referrer}" "%{DATA:user_agent}" "%{DATA:x_forwarded_for}" %{NUMBER:request_time:float} %{NUMBER:upstream_response_time:float}' }
    }
    date {
      match => ["timestamp" , "dd/MMM/yyyy:HH:mm:ss Z"]
    }
  }

  # Parse application logs
  if "application" in [tags] {
    grok {
      match => { "message" => '%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:log_level} %{GREEDYDATA:log_message}' }
    }
    date {
      match => ["timestamp" , "ISO8601"]
    }
  }

  # Add geoip information
  if [remote_ip] {
    geoip {
      source => "remote_ip"
      target => "geoip"
      add_tag => ["geoip"]
    }
  }

  # Add user agent information
  if [user_agent] {
    useragent {
      source => "user_agent"
      target => "user_agent_info"
    }
  }

  # Clean up fields
  mutate {
    remove_field => ["@version", "path"]
  }
}

output {
  # Output to Elasticsearch
  if [@metadata][output] == "elasticsearch" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "logstash-%{+YYYY.MM.dd}"
      user => "${ELASTICSEARCH_USER}"
      password => "${ELASTICSEARCH_PASSWORD}"
      ssl => true
      ssl_certificate_verification => false
      manage_template => false
    }
  }
  # Output to file (for debugging)
  else if [@metadata][output] == "file" {
    file {
      path => "/var/log/logstash/output.log"
      codec => line { format => "%{message}" }
    }
  }
  # Default output to stdout
  else {
    stdout { codec => rubydebug }
  }
}
