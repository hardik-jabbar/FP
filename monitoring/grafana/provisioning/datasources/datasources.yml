# config file version
apiVersion: 1

# List of datasources to insert/update depending
# on what's available to the grafana instance
#
# <string, required> name of the datasource. Required
datasources:
  # <string, required> name of the datasource. Required
  - name: Prometheus
    type: prometheus
    # Access mode - proxy (server in the UI) or direct (browser in the UI).
    access: proxy
    # <int> org id. will default to orgId 1 if not specified
    orgId: 1
    # <string, required> The URL of the Prometheus instance.
    url: http://prometheus:9090
    # <bool> mark as default datasource. Max one per org
    isDefault: true
    # <map> fields that will be converted to json and stored in jsonData
    jsonData:
      # <duration> time range if no time range is selected. Defaults to 1h
      timeInterval: 15s
      # <string> Sets the HTTP method to query Prometheus. (GET, POST). Defaults to GET
      httpMethod: GET
      # <bool> Enable/disable basic auth. Defaults to false
      basicAuth: false
      # <string> Defines the type of the Prometheus instance. (prometheus, cortex, thanos, mimir). Defaults to prometheus
      prometheusType: prometheus
      # <string> Sets the type of the prometheus data source (prometheus, loki, tempo, etc.)
      type: prometheus
      # <string> Sets the uid of the datasource. This is required if you want to import dashboards later
      uid: prometheus
    # <map> fields that will be converted to json and stored in secureJsonData
    secureJsonData: {}
    # <string> datasource version
    version: 1
    # <bool> allow users to edit datasources from the UI.
    editable: true

  # Loki datasource
  - name: Loki
    type: loki
    access: proxy
    orgId: 1
    url: http://loki:3100
    jsonData:
      maxLines: 1000
      timeInterval: 15s
    version: 1
    editable: true
    isDefault: false
    uid: loki

  # Jaeger datasource
  - name: Jaeger
    type: jaeger
    access: proxy
    url: http://jaeger:16686
    jsonData:
      nodeGraph:
        enabled: true
    version: 1
    editable: true
    isDefault: false
    uid: jaeger

  # Zipkin datasource
  - name: Zipkin
    type: zipkin
    access: proxy
    url: http://zipkin:9411
    version: 1
    editable: true
    isDefault: false
    uid: zipkin

  # Elasticsearch datasource
  - name: Elasticsearch
    type: elasticsearch
    access: proxy
    url: http://elasticsearch:9200
    jsonData:
      timeField: '@timestamp'
      esVersion: '8.0.0'
      logMessageField: 'message'
      logLevelField: 'level'
    version: 1
    editable: true
    isDefault: false
    uid: elasticsearch

  # PostgreSQL datasource
  - name: PostgreSQL
    type: postgres
    access: proxy
    url: postgres:5432
    database: ${POSTGRES_DB}
    user: ${POSTGRES_USER}
    basicAuth: false
    isDefault: false
    jsonData:
      postgresVersion: 16
      sslmode: 'disable'
      timescaledb: false
    secureJsonData:
      password: ${POSTGRES_PASSWORD}
    version: 1
    editable: true
    uid: postgres

  # Redis datasource
  - name: Redis
    type: redis-datasource
    access: proxy
    url: redis:6379
    jsonData:
      poolSize: 5
      timeout: 10
      pingInterval: 60
      pipelineWindow: 0
      tlsAuth: false
      tlsAuthWithCACert: false
      tlsSkipVerify: true
      tlsConfiguration: 0
      client: 'node'
      sentinelName: ''
      sentinelUser: ''
      sentinelPassword: ''
      sentinelAcl: false
      sentinelWithTLS: false
      sentinelTlsSkipVerify: false
      sentinelTlsAuth: false
      sentinelTlsAuthWithCACert: false
      sentinelTlsConfiguration: 0
      sentinelTlsCaCertFile: ''
      sentinelTlsCertFile: ''
      sentinelTlsKeyFile: ''
      sentinelTlsServerName: ''
      sentinelTlsClientCert: ''
      sentinelTlsClientKey: ''
      sentinelTlsClientKeyPass: ''
      sentinelTlsServerName: ''
      sentinelTlsInsecureSkipVerify: true
    secureJsonData:
      password: ${REDIS_PASSWORD}
    version: 1
    editable: true
    isDefault: false
    uid: redis
